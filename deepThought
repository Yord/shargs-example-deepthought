#!/usr/bin/env node

const {parserSync} = require('shargs')
const {subcommand, flag, number, command, string, stringPos} = require('shargs-opts')
const {cast, flagsAsBools, requireOpts, restrictToOnly, reverseFlags, setDefaultValues, splitShortOpts, verifyOpts} = require('shargs-parser')
const {desc, optsDef, optsLists, space, synopses, synopsis, usage} = require('shargs-usage')

const description = (
  'Deep Thought was created to come up with the Answer to ' +
  'The Ultimate Question of Life, the Universe, and Everything.'
)

const askOpts = [
  string('format', ['--format'], {only: ['json', 'xml'], defaultValues: ['json'], desc: 'Respond either with json or xml.'}),
  flag('html', ['--no-html'], {reverse: true, desc: 'Removes HTML tags.'}),
  flag('help', ['-h', '--help'], {desc: 'Print this help message and exit.'}),
  stringPos('question', {required: true, desc: 'State your question.'})
]

const opts = [
  subcommand(askOpts)('ask', ['ask'], {required: true, desc: 'Ask a question.'}),
  number('answer', ['-a', '--answer'], {defaultValues: [42], desc: 'The answer.'}),
  flag('help', ['-h', '--help'], {desc: 'Print this help message and exit.'})
]

const ask = command('deepThought ask', askOpts, {desc: description})

const deepThought = command('deepThought', opts, {desc: description})

const rules = opts => (
  !opts.some(_ => _.key === 'html' && typeof _.values !== 'undefined') ||
  opts.some(_ => _.key === 'format' && (typeof _.values === 'undefined' || _.values[0] === 'json'))
)

const stages = {
  argv: [splitShortOpts],
  opts: [setDefaultValues, requireOpts, reverseFlags, restrictToOnly, cast],
  args: [flagsAsBools]
}

const substages = {
  ask: [verifyOpts(rules), ...stages.opts]
}

const docs = usage([
  synopses,
  space,
  optsLists,
  space,
  desc
])

const askDocs = usage([
  synopsis,
  space,
  optsDef,
  space,
  desc
])

const style = {
  line: [{width: 80}],
  desc: [{padStart: 4, width: 76}],
  cols: [{width: 25}, {width: 55}]
}

const argv = process.argv.slice(2)

const deepThoughtParser = parserSync(stages, substages)(deepThought)
const {args, errs} = deepThoughtParser(argv)

if (args.help) {
  const help = docs(deepThought)(style)
  console.log(help)
  process.exit(0)
}

if (args.ask && args.ask.help) {
  const askHelp = askDocs(ask)(style)
  console.log(askHelp)
  process.exit(0)
}

if (errs.length > 0) {
  errs.forEach(({code, msg}) => console.log(`${code}: ${msg}`))
  process.exit(1)
}

console.log(`The answer is: ${args.answer}`)
console.log(JSON.stringify(args, null, 2))
process.exit(0)